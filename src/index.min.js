export class WaveAudioPlayerDOMElement extends HTMLElement{constructor(){super(),this.shadowDOM=this.attachShadow({mode:"open"}),this.audioData=null,this.hasAttribute("wave-options")?(this.options=JSON.parse(this.attributes["wave-options"].value),this.options.width=parseInt(this.attributes["wave-width"].value),this.options.height=parseInt(this.attributes["wave-height"].value)):this.options={samples:40,type:"mirror",width:parseInt(this.attributes["wave-width"].value),height:parseInt(this.attributes["wave-height"].value),paths:[{d:"V",sy:0,x:50,ey:100}]},this.options.hasOwnProperty("animation")?this.animation=this.options.animation:this.animation=!1,this.playPath="M8.5 8.7c0-1.7 1.2-2.4 2.6-1.5l14.4 8.3c1.4.8 1.4 2.2 0 3l-14.4 8.3c-1.4.8-2.6.2-2.6-1.5V8.7z",this.pausePath="M9.2 25c0 .5.4 1 .9 1h3.6c.5 0 .9-.4.9-1V9c0-.5-.4-.9-.9-.9h-3.6c-.4-.1-.9.3-.9.9v16zm11-17c-.5 0-1 .4-1 .9V25c0 .5.4 1 1 1h3.6c.5 0 1-.4 1-1V9c0-.5-.4-.9-1-.9 0-.1-3.6-.1-3.6-.1z",this.playPathButton=null,this.svg=null,this.path1=null,this.path2=null,this.animationsvg=null,this.animationsvgx=null,this.audio=null,this.durationContainer=null,this.seekSlider=null,this.currentTimeContainer=null,this.playIconContainer=null,this.raf=null}initComponent(){this.playPathButton=this.shadowDOM.getElementById("playPathButton"),this.svg=this.shadowDOM.getElementById("svg"),this.path1=this.shadowDOM.getElementById("path1"),this.path2=this.shadowDOM.getElementById("path2"),this.animationsvg=this.shadowDOM.getElementById("animationsvg"),this.animationsvgx=this.shadowDOM.getElementById("animationsvgx"),this.audio=this.shadowDOM.querySelector("audio"),this.durationContainer=this.shadowDOM.getElementById("duration"),this.seekSlider=this.shadowDOM.getElementById("seek-slider"),this.currentTimeContainer=this.shadowDOM.getElementById("current-time"),this.playIconContainer=this.shadowDOM.getElementById("play"),this.svg.pauseAnimations(),this.audio.readyState>0?this.loadSong():this.audio.addEventListener("loadedmetadata",this.loadSong),this.audio.addEventListener("ended",this.onFinish),this.seekSlider.addEventListener("input",this.sliderInput),this.seekSlider.addEventListener("change",this.sliderChange),this.playIconContainer.addEventListener("click",this.playPause)}loadSong=()=>{this.durationContainer.textContent=this.calculateTime(this.audio.duration),this.seekSlider.max=this.audio.duration,this.svg.unpauseAnimations(),this.animationsvg.setAttribute("dur",""+this.audio.duration+"s"),this.animation||this.animationsvgx.setAttribute("dur",""+this.audio.duration+"s"),this.svg.pauseAnimations(),this.svg.setCurrentTime(0)};playPause=()=>{this.audio.paused?(this.audio.play(),this.svg.unpauseAnimations(),this.path2.style.display="block",this.playPathButton.setAttribute("d",this.pausePath),this.raf=requestAnimationFrame(this.whilePlaying)):(this.audio.pause(),this.svg.pauseAnimations(),this.playPathButton.setAttribute("d",this.playPath),cancelAnimationFrame(this.raf))};sliderInput=()=>{this.path2.style.display="block",this.currentTimeContainer.textContent=this.calculateTime(this.seekSlider.value),this.svg.setCurrentTime(this.seekSlider.value),this.audio.paused||cancelAnimationFrame(this.raf)};sliderChange=()=>{this.audio.currentTime=this.seekSlider.value,this.path2.style.display="block",this.svg.setCurrentTime(this.seekSlider.value),this.audio.paused||(this.raf=requestAnimationFrame(this.whilePlaying))};onFinish=()=>{this.seekSlider.value=this.seekSlider.max,this.svg.setCurrentTime(this.audio.duration),this.svg.pauseAnimations(),this.playPathButton.setAttribute("d",this.playPath),cancelAnimationFrame(this.raf)};whilePlaying=()=>{this.seekSlider.value=this.audio.currentTime,this.currentTimeContainer.textContent=this.calculateTime(this.seekSlider.value),this.svg.setCurrentTime(this.seekSlider.value),this.raf=requestAnimationFrame(this.whilePlaying)};async audioPath(){this.audioData=await this.getAudioData(this.attributes.src.value),this.svgDraw()}svgDraw=()=>{let a=this.linearPath(this.audioData,this.options);this.animation?this.animationsvg.setAttribute("values",a):(this.path1.setAttribute("d",a),this.path2.setAttribute("d",a)),this.svg.setCurrentTime(this.seekSlider.value)};calculateTime=b=>{let c=Math.floor(b/60),a=Math.floor(b%60),d=a<10?`0${a}`:`${a}`;return`${c}:${d}`};mapComponentAttributes(){["src","wave-height","wave-width","color","wave-options","wave-color","wave-progress-color","wave-slider"].forEach(a=>{this.attributes[a]||(this.attributes[a]={value:null})})}connectedCallback(){this.mapComponentAttributes(),this.render(),this.initComponent(),this.audioPath()}render(){this.shadowDOM.innerHTML=`
            ${this.templateCss()}
            ${this.template()}
        `}template(){let a=`
        <div part="player" class="player">
            <button id="play" part="play">
                <svg viewBox="0 0 34 34" width="34" height="34" part="button">
                    <path id="playPathButton" d="M8.5 8.7c0-1.7 1.2-2.4 2.6-1.5l14.4 8.3c1.4.8 1.4 2.2 0 3l-14.4 8.3c-1.4.8-2.6.2-2.6-1.5V8.7z"></path>
                    <!--<path fill="currentColor" d="M9.2 25c0 .5.4 1 .9 1h3.6c.5 0 .9-.4.9-1V9c0-.5-.4-.9-.9-.9h-3.6c-.4-.1-.9.3-.9.9v16zm11-17c-.5 0-1 .4-1 .9V25c0 .5.4 1 1 1h3.6c.5 0 1-.4 1-1V9c0-.5-.4-.9-1-.9 0-.1-3.6-.1-3.6-.1z"></path>-->
                </svg>
            </button>
        <div id="current-time" part="currenttime">0:00</div>
        <div id="slider" part="slider">
            <svg id="svg" part="svg" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 ${this.attributes["wave-width"].value} ${this.attributes["wave-height"].value}" width="${this.attributes["wave-width"].value}" height="${this.attributes["wave-height"].value}">
        `;return this.animation?a+=`
            <path id="path1" part="path1"  stroke-width="2" style="display:none;"></path>
            <path id="path2" part="path2"  stroke-width="2" style="display:block;">
                <animate id="animationsvg" attributeName="d" dur="99999s" calcMode="linear" values="" fill="freeze"></animate>
            </path>
            `:a+=`
            <defs>
                <clipPath id="left-to-right-x">
                <rect x="-1" y="-100" width="${parseInt(this.attributes["wave-width"].value)+2}" height="${parseInt(this.attributes["wave-height"].value)+200}" >
                    <animate id="animationsvgx" attributeName="x" values="-1;${parseInt(this.attributes["wave-width"].value)+2}" dur="99999s" fill="freeze" />   
                </rect>
                </clipPath>
                <clipPath id="left-to-right">
                <rect x="-${parseInt(this.attributes["wave-width"].value)+2}" y="-100" width="${parseInt(this.attributes["wave-width"].value)+2}" height="${parseInt(this.attributes["wave-height"].value)+200}" >
                    <animate id="animationsvg" attributeName="x" values="-${parseInt(this.attributes["wave-width"].value)+2};-1" dur="99999s" fill="freeze" />   
                </rect>
                </clipPath>    
            </defs> 
            <path id="path1" part="path1"  stroke-width="2" d="" clip-path="url(#left-to-right-x)"></path>
            <path id="path2" part="path2"  stroke-width="2" d="" clip-path="url(#left-to-right)" style="display:none;"></path>`,a+=`
        </svg>
                <input type="range" part="input" id="seek-slider" max="100" value="0" step="any">
            </div>
            <div id="duration" part="duration">0:00</div>
        </div>
        <audio src="${this.attributes.src.value}"></audio>
        `}templateCss(){return`
            <style>
            *, :after, :before { 
                box-sizing: border-box;
                margin: 0;
            }
            :host {
                display: flex;
               
            }
            .player {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }
            #play {
                background: transparent;
                border: none;
                cursor:pointer;
                padding: 0 0 0 10px;
                margin: 0px;
                
            }
            #play svg {
                fill: ${this.attributes.color?.value??"#858a8d"};
                position:relative;
                transition: transform 0.3s;
                top: -0.5px;
            }
            #play svg:hover {
                transform: scale(1.2);
            }
            #play svg path {
                stroke-linecap: round;
                stroke-linejoin: round;
                transition: 0.2s;
            }
            #svg {
                margin: 0 10px;
                overflow: visible;
                stroke-width: 1px;
                fill: none;
            }
            #path1 {
                stroke: ${this.attributes["wave-color"]?.value??"#dadcdd"}; 
                overflow: visible;
                stroke-linecap: round;
            }
            #path2 {
                stroke: ${this.attributes["wave-progress-color"]?.value??"#858a8d"};
                overflow: visible;
                stroke-linecap: round;
            }
            #slider  {
                position:relative;
            }
            #duration, #current-time {
                position: relative;
                top:-1.1px;
                color: ${this.attributes.color?.value??"#858a8d"};
                margin: 0px 10px;
                font-size: 16px;
                font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
                min-width:32px;
            }
            #seek-slider {
                position: absolute;
                width: 100%;
                left: 0;
            }
            input[type=range] {
                -webkit-appearance: none; 
                width: 100%; 
                background: transparent; 
                padding: 0px;
                margin: 0px;
                border: 0px;
                height: ${parseInt(this.attributes["wave-height"].value)}px;
            }  
            input[type=range]::-webkit-slider-thumb {
                -webkit-appearance: none;
            }
            input[type=range]:focus {
                outline: none; 
            }
            
            input[type=range]::-ms-track {
                width: 100%;
                cursor: pointer;
                /* Hides the slider so custom styles can be added */
                background: transparent; 
                border-color: transparent;
                color: transparent;
            }
            input[type=range]::-webkit-slider-thumb {
                -webkit-appearance: none;
                position:relative; 
                /*top: -1.5px;*/
                height: 12.5px;
                width: 12.5px;
                border-radius: 50%;
                background:  ${this.attributes["wave-slider"]?.value??"#4fc3f7"};
                cursor: pointer;
                box-shadow: none;
            }
            input[type="range"]::-webkit-slider-thumb {
                transition: transform 0.3s;
            }
            input[type="range"]:active::-webkit-slider-thumb {
                transform: scale(1.5);
            }
            input[type="range"]::-moz-range-thumb {
                height: 12.5px;
                width: 12.5px;
                border-radius: 50%;
                background:  ${this.attributes["wave-slider"]?.value??"#4fc3f7"};
                cursor: pointer;
                box-shadow: none;
                border: 0px;
            }

            input[type="range"]:active::-moz-range-thumb {
                transform: scale(1.5);
            }  
            span {
                color: red;
            }
            </style>
        `}getAudioData=a=>{window.AudioContext=window.AudioContext||window.webkitAudioContext;let b=new AudioContext;return fetch(a).then(a=>a.arrayBuffer()).then(a=>b.decodeAudioData(a)).catch(a=>{console.error(a)})};linearPath=(y,U)=>{let{channel:V=0,samples:t=y.length,height:d=100,width:W=800,top:z=0,left:j=0,type:h="steps",paths:a=[{d:"Q",sx:0,sy:0,x:50,y:100,ex:100,ey:0}],animation:X=!1,animationframes:Y=10,normalize:Z=!0}=U,$=this.getFramesData(y,V,X,Y),A=this.getFilterData($,t),r=Z?this.getNormalizeData(A):A,f="",g="bars"!=h?(d+2*z)/2:d+z,c=W/t,s=a.length,_="mirror"==h?2*s:s,aa=r.length;for(let o=0;o<aa;o++){if(o>0){let B=f.length,ab=f.charAt(B-1);";"==ab||0===B?f+=" M 0 0 ;":f+=";"}let l=-9999,m=-9999;for(let e=0;e<t;e++){let i="bars"!=h?e%2?1:-1:1,k=1;for(let p=0;p<_;p++){let b=p;p>=s&&(b=p-s,k=-1),a[b].minshow=a[b].minshow??0,a[b].maxshow=a[b].maxshow??1,a[b].normalize=a[b].normalize?? !1;let n=a[b].normalize?1:r[o][e];if(a[b].minshow<=r[o][e]&&a[b].maxshow>=r[o][e])switch(a[b].d){case"L":{let C=e*c+c*a[b].sx/100+j,D=g+ -(n*a[b].sy/100*("bars"!=h?d/2:d)*i)*k,E=e*c+c*a[b].ex/100+j,F=g+ -(n*a[b].ey/100*("bars"!=h?d/2:d)*i)*k;(C!==l||D!==m)&&(f+=`M ${C} ${D} `),f+=`L ${E} ${F} `,l=E,m=F;break}case"H":{let G=e*c+c*a[b].sx/100+j,u=g+ -(n*a[b].y/100*("bars"!=h?d/2:d)*i)*k,H=e*c+c*a[b].ex/100+j,ac=u;(G!==l||u!==m)&&(f+=`M ${G} ${u} `),f+=`H ${H} `,l=H,m=ac;break}case"V":{let v=e*c+c*a[b].x/100+j,I=g+ -(n*a[b].sy/100*("bars"!=h?d/2:d)*i)*k,ad=v,J=g+ -(n*a[b].ey/100*("bars"!=h?d/2:d)*i)*k;(v!==l||I!==m)&&(f+=`M ${v} ${I} `),f+=`V ${J} `,l=ad,m=J;break}case"C":{let w=e*c+c*a[b].sx/100+j,x=g-g*a[b].sy/100*i,ae=e*c+c*a[b].x/100+j,af=g+ -(n*a[b].y/100*("bars"!=h?d:2*d)*i)*k,K=e*c+c*a[b].ex/100+j,L=g-g*a[b].ey/100*i;(w!==l||x!==m)&&(f+=`M ${w} ${x} `),f+=`C ${w} ${x} ${ae} ${af} ${K} ${L} `,l=K,m=L;break}case"Q":{let M=e*c+c*a[b].sx/100+j,N=g+ -(n*a[b].sy/100*("bars"!=h?d/2:d)*i)*k,ag=e*c+c*a[b].x/100+j,ah=g+ -(n*a[b].y/100*("bars"!=h?d:2*d)*i)*k,O=e*c+c*a[b].ex/100+j,P=g+ -(n*a[b].ey/100*("bars"!=h?d/2:d)*i)*k;(M!==l||N!==m)&&(f+=`M ${M} ${N} `),f+=`Q ${ag} ${ah} ${O} ${P} `,l=O,m=P;break}case"A":{let Q=e*c+c*a[b].sx/100+j,R=g+ -(n*a[b].sy/100*("bars"!=h?d/2:d)*i)*k,S=e*c+c*a[b].ex/100+j,T=g+ -(n*a[b].ey/100*("bars"!=h?d/2:d)*i)*k;(Q!==l||R!==m)&&(f+=`M ${Q} ${R} `);let ai=a[b].rx*c/100,aj=a[b].ry*c/100,q=a[b].sweep;-1==i&&(q=1==q?0:1),-1==k&&(q=1==q?0:1),f+=`A ${ai} ${aj} ${a[b].angle} ${a[b].arc} ${q} ${S} ${T} `,l=S,m=T;break}case"Z":f+="Z "}}}}return f};polarPath=(B,ad)=>{let{channel:ae=0,samples:v=B.length,distance:e=50,length:f=100,top:l=0,left:m=0,type:C="steps",startdeg:s=0,enddeg:y=360,invertdeg:D=!1,invertpath:af=!1,paths:a=[{d:"Q",sdeg:0,sr:0,deg:50,r:100,edeg:100,er:0}],animation:ag=!1,animationframes:ah=10,normalize:ai=!0}=ad,aj=this.getFramesData(B,ae,ag,ah),E=this.getFilterData(aj,v),w=ai?this.getNormalizeData(E):E,j="",F=y<s?y+360:y,k=D?(s-F)/v:(F-s)/v,n=D?90+s+180:90+s,g=af?-1:1,x=a.length,ak="mirror"==C?2*x:x,o=Math.PI/180,al=w.length;for(let r=0;r<al;r++){if(r>0){let G=j.length,am=j.charAt(G-1);";"==am||0===G?j+=" M 0 0 ;":j+=";"}let p=-9999,q=-9999;for(let i=0;i<v;i++){let d="bars"!=C?i%2?1:-1:1,c=1;for(let t=0;t<ak;t++){let b=t;t>=x&&(b=t-x,c=-1),a[b].minshow=a[b].minshow??0,a[b].maxshow=a[b].maxshow??1,a[b].normalize=a[b].normalize?? !1;let h=a[b].normalize?1:w[r][i];if(a[b].minshow<=w[r][i]&&a[b].maxshow>=w[r][i])switch(a[b].d){case"L":{let H=(k*(i+a[b].sdeg/100)-n)*o,I=(k*(i+a[b].edeg/100)-n)*o,J=m+(f*(a[b].sr/100)*h*d*c*g+e)*Math.cos(H),K=l+(f*(a[b].sr/100)*h*d*c*g+e)*Math.sin(H),L=m+(f*(a[b].er/100)*h*d*c*g+e)*Math.cos(I),M=l+(f*(a[b].er/100)*h*d*c*g+e)*Math.sin(I);(J!==p||K!==q)&&(j+=`M ${J} ${K} `),j+=`L ${L} ${M} `,p=L,q=M;break}case"C":{let N=(k*(i+a[b].sdeg/100)-n)*o,O=(k*(i+a[b].deg/100)-n)*o,P=(k*(i+a[b].edeg/100)-n)*o,z=m+(f*(a[b].sr/100)*h*d*c*g+e)*Math.cos(N),A=l+(f*(a[b].sr/100)*h*d*c*g+e)*Math.sin(N),an=m+(f*(a[b].r/100)*h*d*c*g+e)*Math.cos(O),ao=l+(f*(a[b].r/100)*h*d*c*g+e)*Math.sin(O),Q=m+(f*(a[b].er/100)*h*d*c*g+e)*Math.cos(P),R=l+(f*(a[b].er/100)*h*d*c*g+e)*Math.sin(P);(z!==p||A!==q)&&(j+=`M ${z} ${A} `),j+=`C ${z} ${A} ${an} ${ao} ${Q} ${R} `,p=Q,q=R;break}case"Q":{let S=(k*(i+a[b].sdeg/100)-n)*o,T=(k*(i+a[b].deg/100)-n)*o,U=(k*(i+a[b].edeg/100)-n)*o,V=m+(f*(a[b].sr/100)*h*d*c*g+e)*Math.cos(S),W=l+(f*(a[b].sr/100)*h*d*c*g+e)*Math.sin(S),ap=m+(f*(a[b].r/100)*h*d*c*g+e)*Math.cos(T),aq=l+(f*(a[b].r/100)*h*d*c*g+e)*Math.sin(T),X=m+(f*(a[b].er/100)*h*d*c*g+e)*Math.cos(U),Y=l+(f*(a[b].er/100)*h*d*c*g+e)*Math.sin(U);(V!==p||W!==q)&&(j+=`M ${V} ${W} `),j+=`Q ${ap} ${aq} ${X} ${Y} `,p=X,q=Y;break}case"A":{let Z=(k*(i+a[b].sdeg/100)-n)*o,$=(k*(i+a[b].edeg/100)-n)*o,_=m+(f*(a[b].sr/100)*h*d*c*g+e)*Math.cos(Z),aa=l+(f*(a[b].sr/100)*h*d*c*g+e)*Math.sin(Z),ab=m+(f*(a[b].er/100)*h*d*c*g+e)*Math.cos($),ac=l+(f*(a[b].er/100)*h*d*c*g+e)*Math.sin($);(_!==p||aa!==q)&&(j+=`M ${_} ${aa} `);let ar=k*i*a[b].angle/100,as=a[b].rx*k/100,at=a[b].ry*k/100,u=a[b].sweep;-1==d&&(u=1==u?0:1),-1==c&&(u=1==u?0:1),j+=`A ${as} ${at} ${ar} ${a[b].arc} ${u} ${ab} ${ac} `,p=ab,q=ac;break}case"Z":j+="Z "}}}}return j};getFramesData=(d,f,g,h)=>{let b=d.getChannelData(f),c=[];if(g){let e=d.sampleRate/h;for(let a=0;a<b.length;a+=e){let i=b.slice(a,a+e);c.push(i)}}else c.push(b);return c};getFilterData=(b,f)=>{let g=[],j=b.length;for(let a=0;a<j;a++){let c=Math.floor(b[a].length/f),h=[];for(let d=0;d<f;d++){let k=c*d,i=0;for(let e=0;e<c;e++)i+=Math.abs(b[a][k+e]);h.push(i/c)}g.push(h)}return g};getNormalizeData=a=>{let d=[],e=a.length;for(let b=0;b<e;b++){let g=Math.max(...a[b]);d.push(g)}let i=Math.pow(Math.max(...d),-1),f=[];for(let c=0;c<e;c++){let h=a[c].map(a=>a*i);f.push(h)}return f}}window.customElements.define("wave-audio-player",WaveAudioPlayerDOMElement)